非同期プログラミング

並行サーバ
    反復サーバ
        クライアントからのリクエストを受け付けた順にしか処理できない
        ※echo_server.rs
    並行サーバ
        リクエストを並行に処理するサーバ

コルーチンとスケジューリング
    コルーチン
        中断と再開ができる関数の総称※本書のみ
        対称コルーチン
            ※AとBの処理がある想定
            Aを呼び出し
            Bを呼び出し。処理中断。
            Aの途中から開始。処理中断
            Bの途中から開始
        非対称コルーチン※ジェネレータとも呼ぶ
            関数の継続とでも呼べるオブジェクトが返りそのオブジェクトに対して関数を呼び出すことで継続すべき箇所からの再開が可能
    スケジューリング
        非対称コルーチンを使えば中断された関数の再開を自由に行える
            再開をスケジューリングして実行することも可能


async/await
    非同期プログラミングを行うための言語機能
        Rustの場合1.39空実装
    Futureとasync/await
        Futureは将来のいつかの時点で値が決まることを示すデータ型
    IO多重化とasync/await
        epoll関数とasync/awaitを組み合わせることが可能

非同期ライブラリ
    Rustのasync/awaitによる非同期ライブラリ：Tokio
    