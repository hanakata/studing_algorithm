同期処理１

レースコンディション
    日本語訳で競合の意味
    複数のプロセスが並行して共有リソースにアクセスした結果引き起こされる予期しない異常な状態
        この状態を引き起こさずに正しくプログラムするかが課題
        引き起こす箇所をクリティカルセクションと呼ぶ

アトミック処理
    それ以上は分割不可能な処理のこと
        不可分操作とも呼ばれる
    最近のCPUにはアトミック処理用の命令がサポートされている
    Compare and swap
        実際のコードはcompare_and_swap.c参照
            このプログラムはアトミックではない
            アトミック処理を行う組み込み関数がgccやclangに用意されている
                __sync_bool_compare_and_swap関数
    Test and Set
        実際のコードはtest_and_set.cを参照
            これもアトミックではない
            これも組み込み関数が用意されている
                __sync_lock_test_and_set関数
                    ただしこの動作はtest_and_set関数とは若干違う
    Load-Link/Store-Conditional
        x86などのCPUアーキテクチャではlock命令プレフィックスを使ってメモリへの読み書きを排他的に行うよう指定
        ARM、RISC-VなどのCPUはLoad-Link/Store-Conditional命令がアトミック処理の実装に用いられる
            Load-Link命令はメモリ読み込みを行う命令
                排他的に読み込むように指定
            Store-Conditional命令はメモリ書き込みを行う命令
                他のCPUによって書きこみ処理が行われていない場合のみ書き込み

ミュースティック
    クリティカルセクションを実行可能なプロセス数を高々1つに制限する同期処理
        実際のダメなコードはbad_mutex.cを参照
        正しいコードはgood_mutex.c
    スピンロック
        リソースの空きをポーリングして確認するようなロックの獲得方法のこと
            APIはロック獲得用とロック解放用の関数の2つが提供される。
            内容はspinlock.cを参照
                これだと実行速度上のペナルティが大きいので改善したのはspinlock_improvement.c
    Pthreadsのミュースティック
        Pthreadsのミュースティック利用例はpthreads_mutex.c

セマフォ
    最大Nプロセスまで同時にロックを獲得できる（Nはプログラム実行前に決定できる値）
        セマフォはミュースティックをより一般化したもの
        アルゴリズムの詳細はsemaphore.cを参照
    物理的な計算リソースの利用に制限を用いたい場合などに利用できる
    利用方法の注意点としてロックの解放忘れをしないこと
    LL/SC命令を用いた実装
        共有変数を検査して必要な場合のみインクリメントするという処理をアトミックに行うことができる
    POSIXセマフォ
        標準的な実装
        実際のコードはposix_semaphore.c

条件変数
    ある時は待機状態となり条件が待たされた時に実行状態となるときの条件＝条件変数

バリア同期
    全てが揃ってから実行といった同期を実現
    スピンロックベースでのバリア同期
        共有変数を用意
        プロセスがある地点にたどり着いたら共有変数をインクリメント
        ある一定の数に達したら処理を続行

Readers-Writerロック
    書き込み時のみ排他処理を行う。
        以下の制約を満たす場合のみに排他制御を行う
            ロックを獲得中のReaderが同時刻に複数存在可能
            ロックを獲得中のWriterは同時刻に最大1つのみ存在可能
            ReaderとWriterが同時刻にロック獲得状態にならない


Rustはライブラリでこれらの処理は提供されている。

用語
ミュースティック
日本語だと排他実行とも呼ばれる同期処理方法

定義
アトミック処理の性質
ある処理がアトミックである
→その処理の途中状態はシステム的に観測することができず、かつその処理が失敗した場合は完全に処理前の状態に復元される