同期処理１

レースコンディション
    日本語訳で競合の意味
    複数のプロセスが並行して共有リソースにアクセスした結果引き起こされる予期しない異常な状態
        この状態を引き起こさずに正しくプログラムするかが課題
        引き起こす箇所をクリティカルセクションと呼ぶ

アトミック処理
    それ以上は分割不可能な処理のこと
        不可分操作とも呼ばれる
    最近のCPUにはアトミック処理用の命令がサポートされている
    Compare and swap
        実際のコードはcompare_and_swap.c参照
            このプログラムはアトミックではない
            アトミック処理を行う組み込み関数がgccやclangに用意されている
                __sync_bool_compare_and_swap関数
    Test and Set
        実際のコードはtest_and_set.cを参照
            これもアトミックではない
            これも組み込み関数が用意されている
                __sync_lock_test_and_set関数
                    ただしこの動作はtest_and_set関数とは若干違う
    Load-Link/Store-Conditional
        x86などのCPUアーキテクチャではlock命令プレフィックスを使ってメモリへの読み書きを排他的に行うよう指定
        ARM、RISC-VなどのCPUはLoad-Link/Store-Conditional命令がアトミック処理の実装に用いられる
            Load-Link命令はメモリ読み込みを行う命令
                排他的に読み込むように指定
            Store-Conditional命令はメモリ書き込みを行う命令
                他のCPUによって書きこみ処理が行われていない場合のみ書き込み

ミュースティック
    クリティカルセクションを実行可能なプロセス数を高々1つに制限する同期処理
        実際のダメなコードはbad_mutex.cを参照
        正しいコードはgood_mutex.c
用語
ミュースティック
日本語だと排他実行とも呼ばれる同期処理方法

定義
アトミック処理の性質
ある処理がアトミックである
→その処理の途中状態はシステム的に観測することができず、かつその処理が失敗した場合は完全に処理前の状態に復元される